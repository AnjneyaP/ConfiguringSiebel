#!/bin/bash

if [ -d "/persistent/replaceJKS" ] ; then

/bin/cp -f /persistent/replaceJKS/siebelkeystore.jks /siebel/sai/applicationcontainer/siebelcerts

fi

if [ ! -d "/persistent/applicationcontainer" ] ; then

# persistent volume does not exist ... create volume structure, move existing content, and link to mounted content
# create hierarchy

mkdir -p /persistent/applicationcontainer/webapps/siebel/WEB-INF
mkdir -p /persistent/applicationcontainer/webapps/siebel/files
mkdir -p /persistent/applicationcontainer/webapps/siebel/scripts/siebel

# move existing persistent files and relink

mv /siebel/sai/applicationcontainer/migration.log /persistent/applicationcontainer
ln -s /persistent/applicationcontainer/migration.log /siebel/sai/applicationcontainer/migration.log
mv /siebel/sai/applicationcontainer/webapps/applicationinterface.properties /persistent/applicationcontainer/webapps/applicationinterface.properties
ln -s /persistent/applicationcontainer/webapps/applicationinterface.properties /siebel/sai/applicationcontainer/webapps/applicationinterface.properties
mv /siebel/sai/applicationcontainer/webapps/migration.properties /persistent/applicationcontainer/webapps/migration.properties
ln -s /persistent/applicationcontainer/webapps/migration.properties /siebel/sai/applicationcontainer/webapps/migration.properties

# prepare links for files that will be created

ln -s /persistent/applicationcontainer/webapps/siebel/WEB-INF/siebelsecurity.log /siebel/sai/applicationcontainer/webapps/siebel/WEB-INF/siebelsecurity.log

# move existing folders that will contain persistent content and relink

mv /siebel/sai/applicationcontainer/logs /persistent/applicationcontainer
ln -s /persistent/applicationcontainer/logs /siebel/sai/applicationcontainer/logs
mv /siebel/sai/applicationcontainer/webapps/siebel/files/custom /persistent/applicationcontainer/webapps/siebel/files
ln -s /persistent/applicationcontainer/webapps/siebel/files/custom /siebel/sai/applicationcontainer/webapps/siebel/files/custom
mv /siebel/sai/applicationcontainer/webapps/siebel/scripts/siebel/custom /persistent/applicationcontainer/webapps/siebel/scripts/siebel
ln -s /persistent/applicationcontainer/webapps/siebel/scripts/siebel/custom /siebel/sai/applicationcontainer/webapps/siebel/scripts/siebel/custom

else 

# persistent volume does exist ... remove persistent content and link to mounted content
# map to mounted individual files

rm -f /siebel/sai/applicationcontainer/migration.log
ln -s /persistent/applicationcontainer/migration.log /siebel/sai/applicationcontainer/migration.log
rm -f /siebel/sai/applicationcontainer/webapps/applicationinterface.properties
ln -s /persistent/applicationcontainer/webapps/applicationinterface.properties /siebel/sai/applicationcontainer/webapps/applicationinterface.properties
rm -f /siebel/sai/applicationcontainer/webapps/migration.properties
ln -s /persistent/applicationcontainer/webapps/migration.properties /siebel/sai/applicationcontainer/webapps/migration.properties

# prepare links for files that will be created

ln -s /persistent/applicationcontainer/webapps/siebel/WEB-INF/siebelsecurity.log /siebel/sai/applicationcontainer/webapps/siebel/WEB-INF/siebelsecurity.log

# remove existing folders and map to mounted persistent folders

rm -rf /siebel/sai/applicationcontainer/logs
ln -s /persistent/applicationcontainer/logs /siebel/sai/applicationcontainer/logs
rm -rf /siebel/sai/applicationcontainer/webapps/siebel/files/custom
ln -s /persistent/applicationcontainer/webapps/siebel/files/custom /siebel/sai/applicationcontainer/webapps/siebel/files/custom
rm -rf /siebel/sai/applicationcontainer/webapps/siebel/scripts/siebel/custom
ln -s /persistent/applicationcontainer/webapps/siebel/scripts/siebel/custom /siebel/sai/applicationcontainer/webapps/siebel/scripts/siebel/custom

fi

# startup SAI Tomcat

/siebel/sai/applicationcontainer/bin/startup.sh > /persistent/applicationcontainer/logs/containerStartup.log
